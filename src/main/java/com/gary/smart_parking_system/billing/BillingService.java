package com.gary.smart_parking_system.billing;

import com.gary.smart_parking_system.event.VehicleExitEvent;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import java.time.Duration;
import java.time.LocalDateTime;

@Service
public class BillingService {
    private BillingRepository billingRepository;
    private double parkingRatePerHour = 10.0; // Example rate per hour
    // Constructor injection for BillingRepository
    public BillingService(BillingRepository billingRepository) {
        this.billingRepository = billingRepository;
    }

    private double calculateBill(LocalDateTime entryTime, LocalDateTime exitTime) {
        Duration duration = Duration.between(exitTime, entryTime);
        return Math.max(500, (duration.toMinutes() / 60 * parkingRatePerHour));
    }

    @EventListener
    public void handleVehicleExit(VehicleExitEvent event) {
        BillingRecord billingRecord = new BillingRecord(
                null, // ID will be generated by the database
                event.vehicleNumber(),
                calculateBill(event.entryTime(), event.exitTime()),
                LocalDateTime.now()
        );
        billingRepository.save(billingRecord);

        System.out.println("\uD83D\uDCB0 Bill generated for Vehicle " + event.vehicleNumber() + ": R" + billingRecord.getAmount() + ".");
    }
}
